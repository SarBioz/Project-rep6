protein_1before<- subset(At_Least_One_Cell_result, Transcript.type == "protein_coding")
protein_1after <- subset(Genes_At_Least_1Cell_result, Transcript.type == "protein_coding")
protein_2before <- subset(Genes_At_Least_Two_Cells_result, Transcript.type == "protein_coding")
protein_2after <- subset(Genes_At_Least_2Cells_result, Transcript.type == "protein_coding")


genepair <- read.csv("/project/pi_frederic_chain_uml_edu/scRNAseq/Sarvenaz/genepairs/Human_GeneParalogPairs_v104.csv")
genepair <- genepair[genepair$pairs=="pair",] 
filtered_df_1before_gene <- (protein_1before[protein_1before$gene_name%in%genepair$name, ])
uniq_1before_gene <- data.frame(unique(filtered_df_1before_gene$gene_name))
filtered_df_1before_para <- (protein_1before[protein_1before$gene_name%in%genepair$paralogue_name, ])
uniq_1before_para <- data.frame(unique(filtered_df_1before_para$gene_name))
filtered_df_1after_gene <- (protein_1after[protein_1after$gene_name%in%genepair$name, ])
uniq_1after_gene <- data.frame(unique(filtered_df_1after_gene$gene_name))
filtered_df_1after_para <- (protein_1after[protein_1after$gene_name%in%genepair$paralogue_name, ])
uniq_1after_para <- data.frame(unique(filtered_df_1after_para$gene_name))
filtered_df_2before_gene <- (protein_2before[protein_2before$gene_name%in%genepair$name, ])
uniq_2before_gene <- data.frame(unique(filtered_df_2before_gene$gene_name))
filtered_df_2before_para <- (protein_2before[protein_2before$gene_name%in%genepair$paralogue_name, ])
uniq_2before_para <- data.frame(unique(filtered_df_2before_para$gene_name))
filtered_df_2after_gene <- (protein_2after[protein_2after$gene_name%in%genepair$name, ])
uniq_2after_gene <- data.frame(unique(filtered_df_2after_gene$gene_name))
filtered_df_2after_para <- (protein_2after[protein_2after$gene_name%in%genepair$paralogue_name, ])
uniq_2after_para <- data.frame(unique(filtered_df_2after_para$gene_name))



update_paralogue_gene <- function(gene_df, pair_df, paralog_df) {
  merged_data <- merge(gene_df, pair_df[, c("name", "paralogue_name")], by.x = "gene_name", by.y = "name", all.x = FALSE)
  merged_data <- merge( merged_data, paralog_df, by.x = "paralogue_name", by.y = "gene_name", all.x = FALSE)
  return(merged_data)
}

pairgene1 <- update_paralogue_gene(filtered_df_1before_gene, genepair, filtered_df_1before_para)
pairgene2 <- update_paralogue_gene(filtered_df_1after_gene, genepair, filtered_df_1after_para )
pairgene3 <- update_paralogue_gene(filtered_df_2before_gene, genepair, filtered_df_2before_para )
pairgene4 <- update_paralogue_gene(filtered_df_2after_gene, genepair,filtered_df_2after_para )



check_gene_paralog_presence <- function(gene, paralog, gene_names_df) {
  presence_vector <- logical(length(gene))
  synonyms <- unlist(strsplit(gene_names_df$Gene.Synonym, ","))
  for (i in seq_along(gene)) {
    if (gene[i]%in% gene_names_df$gene_name && paralog[i] %in% gene_names_df$gene_name) {
      presence_vector[i] <- TRUE 
      } 
    else if (gene[i] %in% gene_names_df$gene_name) {
      presence_vector[i] <- gene[i] %in% synonyms
      } 
    else if (paralog[i] %in% gene_names_df$gene_name) {
      presence_vector[i] <- paralog[i] %in% synonyms
    }
  }
  
  return(presence_vector)
}
pairgene1_1before <- data.frame(pairgene1)
pairgene1_1before$presence_in_gene_names_df <- check_gene_paralog_presence(pairgene1$gene_name, pairgene1$paralogue_name, protein_1before)
pairgene2_1after <- data.frame(pairgene2)
pairgene2_1after$presence_in_gene_names_df <- check_gene_paralog_presence(pairgene2$gene_name, pairgene2$paralogue_name, protein_1after)
pairgene3_2before <- data.frame(pairgene3)
pairgene3_2before$presence_in_gene_names_df <- check_gene_paralog_presence(pairgene3$gene_name, pairgene3$paralogue_name, protein_2before)
pairgene4_2after <- data.frame(pairgene4)
pairgene4_2after$presence_in_gene_names_df <- check_gene_paralog_presence(pairgene4$gene_name, pairgene4$paralogue_name, protein_2after)



df_list <- list(pairgene1_1before, pairgene2_1after, pairgene3_2before, pairgene4_2after)
sum_occurrences <- sapply(df_list, function(df) sum(df$presence_in_gene_names_df == "TRUE"))

custom_names <- c("at least once before clustering", 
                  "at least once after clustering", 
                  "at least twice before clustering", 
                  "at least twice after clustering")

# Bar plot
bar_pos <- barplot(sum_occurrences, names.arg = custom_names, 
                   xlab = "DataFrames", ylab = "Number of expressed protein coding genes", 
                   main = "Number of expressed protein coding gene pairs before and after clustering",
                   col = c("skyblue", "skyblue", "lightcoral", "lightcoral"), # Set different colors
                   ylim = c(0, max(sum_occurrences) + 1))

# Adding labels inside each bar
text(x = bar_pos, y = sum_occurrences/2, 
     labels = sum_occurrences, pos = 2, col = "blue", cex = 1.2)

# Adding custom names for each bar
text(x = bar_pos, y = -0.5, 
     labels = custom_names, pos = 1, col = "red")
